{
    "sourceFile": "src/app.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1740495284693,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740495303243,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import cors from 'cors';\r\n import helmet from 'helmet';\r\n import { errorHandler } from './middleware/errorHandler';\r\n import userRoutes from './routes/userRoutes';\r\n-import dotenv from 'dotenv';\r\n+pimport dotenv from 'dotenv';\r\n \r\n dotenv.config();\r\n \r\n const app = express();\r\n@@ -13,6 +13,11 @@\n app.use(cors({\r\n   origin: process.env.CORS_ORIGIN\r\n }));\r\n app.use(express.json());\r\n+\r\n+app.use(process.env.API_PREFIX + '/users', userRoutes);\r\n+\r\n+app.use(errorHandler);\r\n+\r\n export default app;\r\n \r\n"
                },
                {
                    "date": 1741175996607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,22 +2,29 @@\n import cors from 'cors';\r\n import helmet from 'helmet';\r\n import { errorHandler } from './middleware/errorHandler';\r\n import userRoutes from './routes/userRoutes';\r\n-pimport dotenv from 'dotenv';\r\n+import dotenv from 'dotenv';\r\n+import webhookRoutes from './routes/webhookRoutes';\r\n \r\n dotenv.config();\r\n \r\n const app = express();\r\n \r\n app.use(helmet());\r\n app.use(cors({\r\n-  origin: process.env.CORS_ORIGIN\r\n+  origin: 'http://localhost:4200', // Angular dev server address\r\n+  credentials: true, // Allow credentials (cookies, authorization headers)\r\n+  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\r\n+  allowedHeaders: ['Content-Type', 'Authorization']\r\n }));\r\n app.use(express.json());\r\n \r\n app.use(process.env.API_PREFIX + '/users', userRoutes);\r\n \r\n+// Add webhook routes\r\n+app.use('/webhook', webhookRoutes);\r\n+\r\n app.use(errorHandler);\r\n \r\n export default app;\r\n \r\n"
                },
                {
                    "date": 1741179492090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,11 +11,11 @@\n const app = express();\r\n \r\n app.use(helmet());\r\n app.use(cors({\r\n-  origin: 'http://localhost:4200', // Angular dev server address\r\n-  credentials: true, // Allow credentials (cookies, authorization headers)\r\n-  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\r\n+    origin: serverConfig.frontend_url,\r\n+    credentials: true,\r\n+    methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\r\n   allowedHeaders: ['Content-Type', 'Authorization']\r\n }));\r\n app.use(express.json());\r\n \r\n"
                },
                {
                    "date": 1741180065352,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,11 @@\n import express from 'express';\r\n import cors from 'cors';\r\n import helmet from 'helmet';\r\n+import { serverConfig, corsOptions } from './config/config';\r\n import { errorHandler } from './middleware/errorHandler';\r\n import userRoutes from './routes/userRoutes';\r\n import dotenv from 'dotenv';\r\n-import webhookRoutes from './routes/webhookRoutes';\r\n \r\n dotenv.config();\r\n \r\n const app = express();\r\n@@ -14,9 +14,11 @@\n app.use(cors({\r\n     origin: serverConfig.frontend_url,\r\n     credentials: true,\r\n     methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\r\n-  allowedHeaders: ['Content-Type', 'Authorization']\r\n+    allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With'],\r\n+    exposedHeaders: ['set-cookie'],\r\n+    maxAge: 600 // 10 minutes\r\n }));\r\n app.use(express.json());\r\n \r\n app.use(process.env.API_PREFIX + '/users', userRoutes);\r\n"
                },
                {
                    "date": 1741180076154,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,22 +4,16 @@\n import { serverConfig, corsOptions } from './config/config';\r\n import { errorHandler } from './middleware/errorHandler';\r\n import userRoutes from './routes/userRoutes';\r\n import dotenv from 'dotenv';\r\n+import webhookRoutes from './routes/webhookRoutes';\r\n \r\n dotenv.config();\r\n \r\n const app = express();\r\n \r\n app.use(helmet());\r\n-app.use(cors({\r\n-    origin: serverConfig.frontend_url,\r\n-    credentials: true,\r\n-    methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\r\n-    allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With'],\r\n-    exposedHeaders: ['set-cookie'],\r\n-    maxAge: 600 // 10 minutes\r\n-}));\r\n+app.use(cors(corsOptions));\r\n app.use(express.json());\r\n \r\n app.use(process.env.API_PREFIX + '/users', userRoutes);\r\n \r\n"
                },
                {
                    "date": 1741182526084,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,14 +13,22 @@\n \r\n app.use(helmet());\r\n app.use(cors(corsOptions));\r\n app.use(express.json());\r\n+app.use(express.urlencoded({ extended: true }));\r\n \r\n app.use(process.env.API_PREFIX + '/users', userRoutes);\r\n \r\n // Add webhook routes\r\n app.use('/webhook', webhookRoutes);\r\n \r\n-app.use(errorHandler);\r\n+app.use((err: Error, req: express.Request, res: express.Response, next: express.NextFunction) => {\r\n+    console.error('Error:', err);\r\n+    res.status(500).json({\r\n+        success: false,\r\n+        message: 'Internal server error',\r\n+        error: process.env.NODE_ENV === 'development' ? err.message : undefined\r\n+    });\r\n+});\r\n \r\n export default app;\r\n \r\n"
                },
                {
                    "date": 1741463098933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,8 @@\n import { serverConfig, corsOptions } from './config/config';\r\n import { errorHandler } from './middleware/errorHandler';\r\n import userRoutes from './routes/userRoutes';\r\n import dotenv from 'dotenv';\r\n-import webhookRoutes from './routes/webhookRoutes';\r\n \r\n dotenv.config();\r\n \r\n const app = express();\r\n"
                },
                {
                    "date": 1741463160405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,11 +16,10 @@\n app.use(express.urlencoded({ extended: true }));\r\n \r\n app.use(process.env.API_PREFIX + '/users', userRoutes);\r\n \r\n-// Add webhook routes\r\n-app.use('/webhook', webhookRoutes);\r\n \r\n+\r\n app.use((err: Error, req: express.Request, res: express.Response, next: express.NextFunction) => {\r\n     console.error('Error:', err);\r\n     res.status(500).json({\r\n         success: false,\r\n"
                },
                {
                    "date": 1741463975626,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import express from 'express';\r\n import cors from 'cors';\r\n import helmet from 'helmet';\r\n import { serverConfig, corsOptions } from './config/config';\r\n-import { errorHandler } from './middleware/errorHandler';\r\n+\r\n import userRoutes from './routes/userRoutes';\r\n import dotenv from 'dotenv';\r\n \r\n dotenv.config();\r\n"
                },
                {
                    "date": 1741463982698,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import express from 'express';\r\n import cors from 'cors';\r\n import helmet from 'helmet';\r\n-import { serverConfig, corsOptions } from './config/config';\r\n+import {corsOptions } from './config/config';\r\n \r\n import userRoutes from './routes/userRoutes';\r\n import dotenv from 'dotenv';\r\n \r\n"
                },
                {
                    "date": 1741473438127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n import express from 'express';\r\n import cors from 'cors';\r\n import helmet from 'helmet';\r\n-import {corsOptions } from './config/config';\r\n-\r\n+import { corsOptions } from './config/config';\r\n import userRoutes from './routes/userRoutes';\r\n import dotenv from 'dotenv';\r\n \r\n dotenv.config();\r\n@@ -16,10 +15,9 @@\n app.use(express.urlencoded({ extended: true }));\r\n \r\n app.use(process.env.API_PREFIX + '/users', userRoutes);\r\n \r\n-\r\n-\r\n+// Error handling middleware\r\n app.use((err: Error, req: express.Request, res: express.Response, next: express.NextFunction) => {\r\n     console.error('Error:', err);\r\n     res.status(500).json({\r\n         success: false,\r\n"
                },
                {
                    "date": 1741474349967,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n \r\n const app = express();\r\n \r\n app.use(helmet());\r\n-app.use(cors(corsOptions));\r\n+app.use(cors(corsOptions));  // <- Uses the configured allowed origins\r\n app.use(express.json());\r\n app.use(express.urlencoded({ extended: true }));\r\n \r\n app.use(process.env.API_PREFIX + '/users', userRoutes);\r\n"
                }
            ],
            "date": 1740495284693,
            "name": "Commit-0",
            "content": "import express from 'express';\r\nimport cors from 'cors';\r\nimport helmet from 'helmet';\r\nimport { errorHandler } from './middleware/errorHandler';\r\nimport userRoutes from './routes/userRoutes';\r\nimport dotenv from 'dotenv';\r\n\r\ndotenv.config();\r\n\r\nconst app = express();\r\n\r\napp.use(helmet());\r\napp.use(cors({\r\n  origin: process.env.CORS_ORIGIN\r\n}));\r\napp.use(express.json());\r\nexport default app;\r\n\r\n"
        }
    ]
}