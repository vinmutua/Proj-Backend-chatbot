{
    "sourceFile": "src/middleware/auth.middleware.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1740611730281,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740616227826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n-import { Request, Response, NextFunction } from 'express';\r\n-import jwt from 'jsonwebtoken';\r\n+// import { Request, Response, NextFunction } from 'express';\r\n+// import jwt from 'jsonwebtoken';\r\n \r\n-interface TokenPayload {\r\n-  userId: number;  // Changed from string to number for PostgreSQL\r\n-}\r\n+// interface TokenPayload {\r\n+//   userId: number;  // Changed from string to number for PostgreSQL\r\n+// }\r\n \r\n-export const authMiddleware = async (req: Request, res: Response, next: NextFunction) => {\r\n-  // ...existing code...\r\n-};\r\n+// export const authMiddleware = async (req: Request, res: Response, next: NextFunction) => {\r\n+//   // ...existing code...\r\n+// };\r\n"
                }
            ],
            "date": 1740611730280,
            "name": "Commit-0",
            "content": "import { Request, Response, NextFunction } from 'express';\r\nimport jwt from 'jsonwebtoken';\r\n\r\ninterface TokenPayload {\r\n  userId: number;  // Changed from string to number for PostgreSQL\r\n}\r\n\r\nexport const authMiddleware = async (req: Request, res: Response, next: NextFunction) => {\r\n  // ...existing code...\r\n};\r\n"
        }
    ]
}